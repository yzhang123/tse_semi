# ################################
# Model: SepFormer for source separation
# https://arxiv.org/abs/2010.13154
#
# Dataset : WHAM!
# ################################
# Basic parameters
# Seed needs to be set at top of yaml, before objects with parameters are made
#
seed: 1234
__set_random_seed: !apply:random.seed [!ref <seed>]
__set_np_seed: !apply:numpy.random.seed [!ref <seed>]
__set_seed: !apply:torch.manual_seed [!ref <seed>]
__set_cuda_seed: !apply:torch.cuda.manual_seed_all [!ref <seed>]

# Data params

# the data folder for the wham dataset
# needs to end with wham_original for the wham dataset
# respecting this convention effects the code functionality
data_folder: /mnt/data/wham/wham_original
wsj_folder: /mnt/data/wsj0.8k

# the path for wsj0/si_tr_s/ folder -- only needed if dynamic mixing is used
# e.g. /yourpath/wsj0-processed/si_tr_s/
## you need to convert the original wsj0 to 8k
# you can do this conversion with the script ../meta/preprocess_dynamic_mixing.py
# base_folder_dm: /mnt/data/wsj0.8k/si_tr_s/
base_folder_dm_info_list:
  - path: '/mnt/data/wsj0.8k/si_tr_s/'
    ext: 'wav'
    type: 'clean'
  - path: '/mnt/data/Speech/VoxCeleb1/dev_wav/'
    ext: 'wav'
    type: 'unclean'

data_clean_prob: .75

time_stamp: placeholder

experiment_name: xformer-wham-semi
output_folder: !ref /mnt/data/zhepei/outputs/sb_tse/results/<time_stamp>+seed_<seed>+<experiment_name>
train_log: !ref <output_folder>/train_log.txt
save_folder: !ref <output_folder>/save

# the file names should start with whamr instead of whamorg
train_txtpath: /mnt/data/Speech/wsj_tse/mix_2_spk_tr_extr.txt
train_wham_folder: !ref <data_folder>/wav8k/min/tr
train_data: !ref <save_folder>/wham_tse_tr.csv
valid_txtpath: /mnt/data/Speech/wsj_tse/mix_2_spk_tt_extr.txt
valid_wham_folder: !ref <data_folder>/wav8k/min/tt
valid_data: !ref <save_folder>/wham_tse_cv.csv
test_txtpath: /mnt/data/Speech/wsj_tse/mix_2_spk_tt_extr.txt
test_wham_folder: !ref <data_folder>/wav8k/min/tt
test_data: !ref <save_folder>/wham_tse_tt.csv
skip_prep: False


# Experiment params
auto_mix_prec: True # Set it to True for mixed precision
test_only: False
num_spks: 2 # set to 3 for wsj0-3mix
progressbar: True
save_audio: False # Save estimated sources on disk
sample_rate: 8000

# Training parameters
N_epochs: 200
batch_size: 1
lr: 0.00015
clip_grad_norm: 5
loss_upper_lim: 999999  # this is the upper limit for an acceptable loss
# if True, the training sequences are cut to a specified length
limit_training_signal_len: True
# this is the length of sequences if we choose to limit
# the signal length of training sequences
training_signal_len: 40000

# Set it to True to dynamically create mixtures at training time
dynamic_mixing: True

# Parameters for data augmentation
use_wavedrop: False
use_speedperturb: True
use_speedperturb_sameforeachsource: False
use_rand_shift: False
min_shift: -8000
max_shift: 8000

speedperturb: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    perturb_prob: 1.0
    drop_freq_prob: 0.0
    drop_chunk_prob: 0.0
    sample_rate: !ref <sample_rate>
    speeds: [95, 100, 105]

wavedrop: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    perturb_prob: 0.0
    drop_freq_prob: 1.0
    drop_chunk_prob: 1.0
    sample_rate: !ref <sample_rate>

# loss thresholding -- this thresholds the training loss
threshold_byloss: True
threshold: -30

# Encoder parameters
N_encoder_out: 256
out_channels: 256
kernel_size: 16
kernel_stride: 8

# Dataloader options
train_dataloader_opts:
    batch_size: !ref <batch_size>
    num_workers: 3

valid_dataloader_opts:
    batch_size: 1
    num_workers: 3

test_dataloader_opts: !ref <valid_dataloader_opts>

N_emb_dim: 256
Embedder: !new:spid_modules.embedder.Embedder
    hyp:
        audio/sample_rate: !ref <sample_rate>
        embedder/n_fft: 512
        embedder/hop: 160
        embedder/n_mels: 40
        embedder/lstm_hidden: 768
        embedder/num_layers: 3
        embedder/emb_dim: !ref <N_emb_dim>
        embedder/pretrained_path: null
        # embedder/pretrained_path: /mnt/data/zhepei/outputs/tse_semi/spid/vfpt_spid/2021-08-29-22-19-31_blstm_softmax_8k_bs46_4sec/chkpt/chkpt_100000.pt
        embedder/trainable: False

# Specifying the network
Encoder: !new:speechbrain.lobes.models.dual_path.Encoder
    kernel_size: !ref <kernel_size>
    out_channels: !ref <N_encoder_out>


SBtfintra: !new:speechbrain.lobes.models.dual_path.SBTransformerBlock
    num_layers: 8
    d_model: !ref <out_channels>
    nhead: 8
    d_ffn: 1024
    dropout: 0
    use_positional_encoding: True
    norm_before: True

SBtfinter: !new:speechbrain.lobes.models.dual_path.SBTransformerBlock
    num_layers: 8
    d_model: !ref <out_channels>
    nhead: 8
    d_ffn: 1024
    dropout: 0
    use_positional_encoding: True
    norm_before: True

MaskNet: !new:sb_modules.dual_path_tse.Dual_Path_Model
    num_spks: !ref <num_spks>
    in_channels: !ref <N_encoder_out>
    out_channels: !ref <out_channels>
    emb_dim: !ref <N_emb_dim>
    fusion_type: add
    num_layers: 2
    K: 250
    intra_model: !ref <SBtfintra>
    inter_model: !ref <SBtfinter>
    norm: ln
    linear_layer_after_inter_intra: False
    skip_around_intra: True

Decoder: !new:speechbrain.lobes.models.dual_path.Decoder
    in_channels: !ref <N_encoder_out>
    out_channels: 1
    kernel_size: !ref <kernel_size>
    stride: !ref <kernel_stride>
    bias: False

optimizer: !name:torch.optim.Adam
    lr: !ref <lr>
    weight_decay: 0

loss_lambdas:
    si-snr: 1.
    triplet: 0.05

train_loss:
    si-snr: !new:losses.MultiSrcNegSDR
        sdr_type: sisdr
        first_channel_only: False
    triplet: !new:torch.nn.TripletMarginLoss
        margin: 1.0

valid_loss: 
    si-snr: !new:losses.MultiSrcNegSDR
        sdr_type: sisdr
        first_channel_only: True

test_loss: !ref <valid_loss>

lr_scheduler: !new:speechbrain.nnet.schedulers.ReduceLROnPlateau
    lr_min: 0.000001
    factor: 0.5
    patience: 2
    dont_halve_until_epoch: 65

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <N_epochs>

modules:
    encoder: !ref <Encoder>
    decoder: !ref <Decoder>
    masknet: !ref <MaskNet>
    embedder: !ref <Embedder>

# datapoint_counter: !new:utils.DatapointCounter

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        encoder: !ref <Encoder>
        decoder: !ref <Decoder>
        masknet: !ref <MaskNet>
        embedder: !ref <Embedder>
        counter: !ref <epoch_counter>
        lr_scheduler: !ref <lr_scheduler>
        # datapoint_counter: !ref <datapoint_counter>

pretrain_checkpointer: null
# pretrain_checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
#     checkpoints_dir: /mnt/data/zhepei/outputs/sb_tse/results/2021-10-14+14-10-55+seed_1234+xformer-wham/save

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

use_wandb: True
train_log_frequency: 100
log_audio_limit: 3
wandb_logger:
    entity: CAL
    project: xformer_wham
    name: !ref <time_stamp>+seed_<seed>+<experiment_name>
    dir: !ref <output_folder>
    reinit: True
    yaml_config: hparams/sepformer_wham_ann.yaml
    resume: False

pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
    collect_in: !ref <save_folder>
    loadables:
        embedding_model: !ref <Embedder>
    paths:
        embedding_model: /mnt/data/zhepei/outputs/tse_semi/spid/vfpt_spid/2021-08-29-22-19-31_blstm_softmax_8k_bs46_4sec/chkpt/embedder_100000.pt
